27e+1000
27e+4
x<-2+3i
i = 4
c(1,2,3)
x = c(1,2,4,5)
y = c(1+2i,2+4i)
c
?c
c(1,er)
c(1,"er")
str(x)
length(x)
summary(x)
head(x,1)
head(x,5)
head(x,2)
head(x,3)
taiL(x)
taiL(x,1)
tail(x,1)
x[1]
x[0]
x[5]
x[4]
x[1,3]
x[1,1]
x[1:1]
x[1:2]
x[1:4]
x[2:1]
x[3:1]
x = c(1,2,4,5)
x[3:1]
x[1]
head(x)
tail(x)
head(x,1)
tail(x,1)
names(x) = c('1',"2","3","4")
x
names(x) = c('11',"22","32","44")
x
x["11"]
x[c("11","22")]
x[c("11","32")]
x[c(TRUE)]
x[c(TRUE,FALSE)]
x[c(TRUE,FALSE,TRUE,FALSE)]
x[c(TRUE,FALSE,TRUE)]
x.append("111")
append(x,"111")
c(1,FALSE)
c(1,FALSE,"REE")
numeric(5)
char(2)
character(2)
logical(4)
raw(2)
1:10
seq(from=1,to=10,by=3)
seq(from=1,to=10,by=4)
seq(from=0,to=10,by=2)
i = seq(from=0,to=10,by=2)
i = seq(from=0,to=10,lenght.out)
i = seq(from=0,to=10,lenght.out = 2)
i = seq(from=0,to=10,length.out = 2)
i = seq(from=0,to=10,length.out = 2)
i = seq(from=0,to=10,length.out = 4)
i = seq(from=0,to=10,length.out = 2)
i = seq(from=0,to=10,length.out = 100)
i = seq(from=0,to=10,length.out = 999)
rep(x=1, times=99)
rep(j=c(1,3), times=99)
rep(x=c(1,3), times=99)
rep(x=c(1,3), times=c(1,3))
rep(x=c(1,3), times=c(1,1))
rep(x=c(1,3), times=c(4,2))
sat.seed(1)
set.seed(1)
hy = set.seed(1)
hy = set.seed(1)
sample(x=1:100,size=10)
set.seed(1)
sample(x=1:100,size=10)
set.seed(2)
sample(x=1:100,size=10)
i = sample(x=1:100,size=10)
sort(i)
sort(i,descreasing=TRUE)
sort(i,descreasing=TRUE)
i = sample(x=1:100,size=10)
i = sample(x=1:100,size=10)
sort(i)
sort(i)
sort(i,descreasing=TRUE)
sort(i,decreasing=TRUE)
order(i)
order(i)
M = matrix(c(1:20),nrow=2,ncol=3)
M = matrix(c(1:20),nrow=5,ncol=4)
M <- matrix(c(1:20),nrow=5,ncol=4)
M <- matrix(c(1:20),nrow=1,ncol=2)
M
M <- matrix(c(1:20),nrow=5,ncol=4)
M
colnames(M)<-c("jedna", "dva", "tri", "ctyri")
M
rownames(M)<-pasteo("radka_",1:5)
rownames(M)<-paste0("radka_",1:5)
M
M[1,2]
M[1:2]
M[2:3]
M[2:3,c(1:3)]
M[2:3,]
c(M)
class(M)
class(M[2])
class(M[,2])
isVector(M)
is.vector(M)
is.vector(class(M[,2]))
M[,2]["radka_1"]
dim(M)
nrow(M)
nrow(M)
dim(M)
nrow(M)
ncol(M)
attributes(M)
cbind(rep(1,3))
cbind(rep(1,3),rep(2,3))
cbind(rep(1,3),rep(2,1))
3
cbind(rep(1,3),rep(2,3))
rbind(rep(1,3),rep(2,3))
1+1
1-1
1*2
4*2
4/1
4/3
2^2
2^6
2^99
2^9
4^(1/2)
sqrt(8)
sqrt(4)
log(2)
exp(4)
factorial(4)
factorial(2)
factorial(99)
choose(3,2)
7%/%7
7%/%3
7%%3
7%%2
7%/%2
7%%2
7%/%2
X <- matrix(sample(1:99))
1:99,9
sample(1:99,9)
X <- matrix(sample(1:99,9),ncol=3)
X
X <- matrix(sample(1:(),9),ncol=3)
X <- matrix(sample(1:9,9),ncol=3)
X
X <- matrix(sample(1:999,9),ncol=3)
X
X <- matrix(sample(1:99,9),ncol=3)
t(X)
sum(X)
rowSums(X)
colSums(X)
colMeans(X)
rowMeans(X)
summary(X)
solve(X)
solve(X,c(1,2,3))
solve(X,c(1,2,3))
solve(X)%*%c(1,3)
solve(X)%*%c(1:3)
X+1000
X+c(1,2,3)
t(X)
t(t(X) / c(1, 100, 1000))
t(t(X) + c(1, 100, 1000))
round(x, digits=2)
x = 1.12345
round(x, digits = 2)
ceil(x)
ceiling(x)
sd(x)
sd(x)
var(x)#rozptyl
var(x) #rozptyl
t(t(X) + c(1, 100, 1000)) # pricti ke sloupcum -> dvakrat transponace
var(x) #rozptyl
cor(x, y)
x = c(1, 3, 2)
y = c(2, 1, 4)
sd(x) #smerodatna odchylka
var(x) #rozptyl
cor(x, y)
cov(x, y) #
mean(x)
median(x)
min(x)
max(x)
unique(z)
z = c(1, 1, 0, 1, 0, 1, 0)
unique(z)
table(z)
head(mtcars)
table(mtcars$cyl, mtcars$am)
table(mtcars$cyl, mtcars$am)
#Logicke operace
x = 1:10
x
x< 5
x = 1
#Logicke operace
x = 1:10
x == 1
x[x<5]
x[x>2 & x<8]
head(mtcars)
mtcars(mtcars$disp > 300)
head(mtcars)
mtcars(mtcars$disp > 300)
head(mtcars)
mtcars(mtcars$disp > 300,)
x = head(mtcars)
x(x$disp > 300,)
head(mtcars)
mtcars
mtcars[mtcars$disp > 300,]
x %in% c(2, 4, 6)
x %in% c(2, 4, 5)
colnames(mtcars)
mtcars[mtcars$disp > 300,]
#Logicke operace
x = 1:10
x %in% c(2, 4, 5)
c()
c([])
x = 0.1 * 3
y = 0.1 * 3
x = 0.3
y == x
all.equal(y,z)
y = 0.1 * 3
all.equal(y, x)
abs(x - y)
abs(x - y) < 0.0000001
list(1, "hihi")
MMDA_02_data <- read.csv("~/unicorn/MMDA_02_data.csv", header=FALSE, sep=";")
View(MMDA_02_data)
# Deskriptivni analyza
#install.packages("pastecs")
library(pastecs)
stat.desc(MMDA_02_data) # tabulka popisne statistiky
stat.desc(MMDA_02_data) # tabulka popisne statistiky
# Deskriptivni analyza
#install.packages("pastecs")
library(pastecs)
stat.desc(MMDA_02_data) # tabulka popisne statistiky
View(MMDA_02_data)
MMDA_02_data <- read.csv("~/unicorn/MMDA_02_data.csv", header=FALSE, sep=";")
View(MMDA_02_data)
MMDA_02_data
stat.desc(MMDA_02_data) # tabulka popisne statistiky
MMDA_02_data
MMDA_02_data <- read.csv("~/unicorn/MMDA_02_data.csv", sep=";")
View(MMDA_02_data)
MMDA_02_data
stat.desc(MMDA_02_data) # tabulka popisne statistiky
stat.desc(MMDA_02_data) # tabulka popisne statistiky
mean(MMDA_02_data$Rainfall) #prumer jedne promenne
stat.desc(MMDA_02_data) # tabulka popisne statistiky
# Vektor vyberovych strednich hodnot
x <- as.matrix(MMDA_02_data[,2:8]) # definovani matice z datove sady
x
n <- dim(x)[1] # rozsah vyberu
n
xbar <- 1/n*t(x)%*%one # vektor prumeru
xbar <- 1/n*t(x)%*%one # vektor prumeru
one <- as.matrix(rep(1, dim(x)[1])) # jednotkovy vektor
xbar <- 1/n*t(x)%*%one # vektor prumeru
print(xbar) # zobrazeni vektoru prumeru
# Kovariancni matice
cov_x <- cov(x)
print(cov_x)
# graficka analyza promennych
plot(MMDA_02_data$Education)
plot(MMDA_02_data$Popden)
plot(MMDA_02_data$NOX)
# normovani promennych
library(robustHD)
standardize(x,centerFun = mean, scaleFun = sd)
standardize(x,centerFun = mean, scaleFun = sd)
vzdalenost_mh <- mahalanobis(x, xbar, cov_x, inverted = FALSE)
print(vzdalenost_mh)
plot(density(vzdalenost_mh, bw = 0.3), main="Squared Mahalanobis distances, n=428, p=9"); rug(vzdalenost_mh)
# Mahalanobisova vzdalenost
require(graphics)
vzdalenost_mh <- mahalanobis(x, xbar, cov_x, inverted = FALSE)
print(vzdalenost_mh)
# graficka analyza promennych
plot(MMDA_02_data$Education)
plot(MMDA_02_data$Popden)
test1 <- MMDA_02_data$NOX[MMDA_02_data$NOX>8000]
test1
test1 <- MMDA_02_data$Popden[MMDA_02_data$Popden>8000]
test1
test1 <- MMDA_02_data[MMDA_02_data$Popden>8000]
test1 <- MMDA_02_data[,MMDA_02_data$Popden>8000]
test1
# normovani promennych
library(robustHD)
standardize(x,centerFun = mean, scaleFun = sd)
#find more than 1.960
# Mahalanobisova vzdalenost
require(graphics)
vzdalenost_mh <- mahalanobis(x, xbar, cov_x, inverted = FALSE)
print(vzdalenost_mh)
plot(density(vzdalenost_mh, bw = 0.3), main="Squared Mahalanobis distances, n=428, p=9"); rug(vzdalenost_mh)
#vetsi nez cca 12
plot(density(vzdalenost_mh, bw = 0.3), main="Squared Mahalanobis distances, n=428, p=9"); rug(vzdalenost_mh)
write.table(vzdalenost_mh, "Users/jindrichjehlicka/unicorn/vzdalenost_mh.txt", sep="\t",dec = ",")
write.table(vzdalenost_mh, "/Users/jindrichjehlicka/unicorn/vzdalenost_mh.txt", sep="\t",dec = ",")
which(vzdalenost_mh>12)
which(vzdalenost_mh>59)
which(vzdalenost_mh>12)
# Q-Q graf pro normalitu
#install.packages("ggpubr")
#library(ggpubr)
#library(ggplot2)
qqnorm(MMDA_02_data$Mortality, pch = 1, frame = TRUE)
qqline(MMDA_02_data$Mortality, col = "steelblue", lwd = 2)
# Q-Q graf pro normalitu
#install.packages("ggpubr")
#library(ggpubr)
#library(ggplot2)
qqnorm(MMDA_02_data$Mortality, pch = 1, frame = TRUE)
qqline(MMDA_02_data$Mortality, col = "steelblue", lwd = 2)
# Q-Q graf pro normalitu
#install.packages("ggpubr")
#library(ggpubr)
#library(ggplot2)
qqnorm(MMDA_02_data$Mortality, pch = 1, frame = TRUE) #
# Hustota pravdepodobnosti
hist(MMDA_02_data$Mortality,probability=TRUE)
lines(density(MMDA_02_data$Mortality),col="red")
# Shapiro-Wilkuv test
shapiro.test(MMDA_02_data$Mortality)
# Kolmogorovuv-Smirnovuv test
ks.test(MMDA_02_data$Mortality, "pnorm", mean=mean(MMDA_02_data$Mortality), sd=sd(MMDA_02_data$Mortality))
# Shapiro-Wilkuv test
shapiro.test(MMDA_02_data$Mortality)
# Kolmogorovuv-Smirnovuv test
ks.test(MMDA_02_data$Mortality, "pnorm", mean=mean(MMDA_02_data$Mortality), sd=sd(MMDA_02_data$Mortality))
# Testy vicerozmerne normality
#install.packages("mvnormtest")
#install.packages("MVN")
library(mvnormtestx)
# Testy vicerozmerne normality
#install.packages("mvnormtest")
#install.packages("MVN")
library(mvnormtest)
library(MVN)
# Shapiro-Wilkuv test
mshapiro.test(t(x))
# Q-Q graf chisq-mahalanobis
qqplot(qchisq(ppoints(60), df = 6), vzdalenost_mh)
abline(0, 1, col = 'gray')
library(MVN)
library(MVN)
?t
?mshapiro.test
# Q-Q graf chisq-mahalanobis
qqplot(qchisq(ppoints(60), df = 6), vzdalenost_mh)
abline(0, 1, col = 'gray')
# Shapiro-Wilkuv test
#x je matice vsech promennych
mshapiro.test(t(x))
x <- as.matrix(MMDA_02_data[,4:5])
x
x <- as.matrix(MMDA_02_data[,5:6])
x <- as.matrix(MMDA_02_data[,6:7])
nox <-as.matrix(MMDA_02_data[,6])
nox
y <- as.matrix(MMDA_02_data[,6:7])
nonwhite <-as.matrix(MMDA_02_data[,7])
nonwhite
plot(nox)
plot(nonwhite)
y
cov_y <- cov(y)
print(cov_y)
vzdalenost_2 <- mahalanobis(y, xbar, cov_y, inverted = FALSE)
print(vzdalenost_2)
dim
?dim
oney <- as.matrix(rep(1, dim(y)[1]))
oney <- as.matrix(rep(1, dim(y)[1]))
oney
one <- as.matrix(rep(1, dim(x)[1])) # jednotkovy vektor
one
ny <- dim(y)[1]
ny
ybar <-1/ny*t(y)%*%oney
ybar
vzdalenost_2 <- mahalanobis(y, ybar, cov_y, inverted = FALSE)
print(vzdalenost_2)
plot(density(vzdalenost_2, bw = 0.3), main="Squared Mahalanobis distances"); rug(vzdalenost_2)
y2 <- as.matrix(MMDA_02_data[c("Nonwhite", "NOX")])
y2
y <- as.matrix(MMDA_02_data[,6:7])
qqnorm(MMDA_02_data$Rainfall, pch = 1, frame = TRUE) #
qqline(MMDA_02_data$Rainfall, col = "steelblue", lwd = 2) #
qqnorm(MMDA_02_data$Education, pch = 1, frame = TRUE) #
qqline(MMDA_02_data$Education, col = "steelblue", lwd = 2) #
qqnorm(MMDA_02_data$Rainfall, pch = 1, frame = TRUE) #
qqline(MMDA_02_data$Rainfall, col = "steelblue", lwd = 2) #
hist(MMDA_02_data$Rainfall,probability=TRUE)
lines(density(MMDA_02_data$Rainfall),col="red")
hist(MMDA_02_data$Mortality,probability=TRUE)
lines(density(MMDA_02_data$Mortality),col="red")
# Vektor vyberovych strednich hodnot
x <- as.matrix(MMDA_02_data[,2:8]) # definovani matice z datove sady
x
# Import dat: File -> Import Datasets -> From text (base) -> vybrat soubor.csv (!!! nutno mit kratkou cestu k datum)
randu(6)
# graficka analyza promennych
plot(MMDA_02_data$Education)
plot(MMDA_02_data$Popden)
plot(nox)
vzdalenost_mh <- mahalanobis(x, xbar, cov_x, inverted = FALSE)
vzdalenost_2 <- mahalanobis(y, ybar, cov_y, inverted = FALSE)
print(vzdalenost_2)
#vetsi nez cca 12
plot(density(vzdalenost_mh, bw = 0.3), main="Squared Mahalanobis distances"); rug(vzdalenost_mh)
plot(density(vzdalenost_2, bw = 0.3), main="Squared Mahalanobis distances"); rug(vzdalenost_2)
#vetsi nez cca 12
plot(density(vzdalenost_mh, bw = 0.3), main="Squared Mahalanobis distances"); rug(vzdalenost_mh)
# Q-Q graf pro normalitu
#install.packages("ggpubr")
#library(ggpubr)
#library(ggplot2)
qqnorm(MMDA_02_data$Mortality, pch = 1, frame = TRUE) #
qqline(MMDA_02_data$Mortality, col = "steelblue", lwd = 2) #
qqnorm(MMDA_02_data$Rainfall, pch = 1, frame = TRUE) #
qqline(MMDA_02_data$Rainfall, col = "steelblue", lwd = 2) #
# Shapiro-Wilkuv test
shapiro.test(MMDA_02_data$Mortality)
# Kolmogorovuv-Smirnovuv test
ks.test(MMDA_02_data$Mortality, "pnorm", mean=mean(MMDA_02_data$Mortality), sd=sd(MMDA_02_data$Mortality))
# Q-Q graf chisq-mahalanobis
qqplot(qchisq(ppoints(60), df = 6), vzdalenost_mh)
# Shapiro-Wilkuv test
#x je matice vsech promennych
#p value porovnavame s alfou Ⲁ
mshapiro.test(t(x))
#vetsi nez cca 12
plot(density(vzdalenost_mh, bw = 0.3), main="Squared Mahalanobis distances"); rug(vzdalenost_mh)
plot(density(vzdalenost_2, bw = 0.3), main="Squared Mahalanobis distances"); rug(vzdalenost_2)
abline(0, 1, col = 'gray')
abline(0, 1, col = 'gray')
# Q-Q graf pro normalitu
#install.packages("ggpubr")
#library(ggpubr)
#library(ggplot2)
qqnorm(MMDA_02_data$Mortality, pch = 1, frame = TRUE) #
qqline(MMDA_02_data$Mortality, col = "steelblue", lwd = 2) #
# Q-Q graf pro normalitu
#install.packages("ggpubr")
#library(ggpubr)
#library(ggplot2)
qqnorm(MMDA_02_data$Mortality, pch = 1, frame = TRUE) #
qqline(MMDA_02_data$Mortality, col = "steelblue", lwd = 2) #
vzdalenost_mh <- mahalanobis(x, xbar, cov_x, inverted = FALSE)
print(vzdalenost_2)
plot(density(vzdalenost_mh, bw = 0.3), main="Squared Mahalanobis distances"); rug(vzdalenost_mh)
library(readxl)
excel2 <- read_excel("excel2.xlsx")
excel2 <- read_xlsx("excel2.xlsx")
getwd()
setwd("/Users/jindrichjehlicka/dev/unicorn")
getwd()
excel2 <- read_xlsx("excel2.xlsx")
excel2 <- read_excel("excel2.xlsx")
excel2
excel2 <- read_excel("excel2.xlsx", skip=2)
excel2
my_data_frame <- as.data.frame(excel2)
my_data_frame
soubor <- my_data_frame(my_data_frame$Year>=2000,)
soubor <- my_data_frame[my_data_frame$Year>=2000,[]
soubot
soubor <- my_data_frame[my_data_frame$Year>=2000,]
soubor
write.csv(soubor,file="soubor.csv", row.names = F)
source("~/dev/unicorn/cviko1_ukol2.R")
source("~/dev/unicorn/cviko1_ukol2.R")
table(soubor,file="soubor.txt", sep=";", dec=".")
write.table(soubor,file="soubor.txt", sep=";", dec=".")
View(soubor)
